#lang racket

(require "priminfo.rkt")

(define-syntax define-racket-prims
  (lambda (x)
    (define (->string x)
      (cond
        [(identifier? x) (symbol->string (syntax->datum x))]
        [(symbol? x) (symbol->string x)]
        [(string? x) x]
        [else (error '->string "not sure how to convert ~s to a string" x)]))
    (define (construct-id tid . rest)
      (when (null? rest) (error 'construct-id "must include more then just template id"))
      (datum->syntax tid
        (string->symbol
          (apply string-append (map ->string rest)))))
    (syntax-case x ()
      [(k [type prim ...] ...)
       (and (andmap (lambda (type) (identifier? type)) (syntax-e #'(type ...)))
            (andmap (lambda (prim) (identifier? prim)) (syntax-e #'(prim ... ...))))
       (with-syntax ([all-primitives (construct-id #'k "all-primitives")]
                     [(type-primitives ...)
                      (map (lambda (type) (construct-id #'k type "-primitives")) (syntax-e #'(type ...)))]
                     [(primitive-type? ...)
                      (map (lambda (type) (construct-id #'k "primitive-" type "?")) (syntax-e #'(type ...)))])
         #'(begin
             (define type-primitives '(prim ...)) ...
             (define primitive-type?
               (lambda (x)
                 (let ([p (if (exact-integer? x) (lookup-primitive x) x)])
                   (and (memq x type-primitives) #t)))) ...
             (define all-primitives (append type-primitives ...))))])))

(define-racket-prims
  [simple * + - / < <= = > >= abs acos add1 angle arithmetic-shift asin atan bitwise-and bitwise-bit-field bitwise-bit-set? bitwise-ior bitwise-not bitwise-xor ceiling complex? append assoc assq assv caaaar caaadr caaar caadar caaddr caadr caar cadaar cadadr cadar caddar cadddr caddr cadr car cdaaar cdaadr cdaar cdadar cdaddr cdadr cdar cddaar cddadr cddar cdddar cddddr cdddr cddr cdr cons boolean? box box-immutable box? byte? bytes bytes->immutable-bytes bytes->list bytes->path bytes->path-element bytes->string/latin-1 bytes->string/locale bytes->string/utf-8 bytes-append bytes-copy bytes-copy! bytes-fill! bytes-length bytes-ref bytes-set! bytes-utf-8-index bytes-utf-8-length bytes-utf-8-ref bytes<? bytes=? bytes>? bytes? char->integer char-alphabetic? char-blank? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? char-downcase char-foldcase char-general-category char-graphic? char-iso-control? char-lower-case? char-numeric? char-punctuation? char-symbolic? char-title-case? char-titlecase char-upcase char-upper-case? char-utf-8-length char-whitespace? char<=? char<? char=? char>=? char>? char? absolute-path? build-path build-path/convention-type cleanse-path complete-path? byte-pregexp byte-pregexp? byte-regexp byte-regexp? bound-identifier=? flmax flmin fl>= fl<= fl> fl< fl= fxmax fxmin fx>= fx<= fx> fx< fx= flsqrt flabs fl/ fl* fl- fl+ fxabs fxmodulo fxremainder fxquotient fx* fx- fx+ flimag-part flreal-part make-flrectangular flexpt flexp fllog flatan flacos flasin fltan flcos flsin flfloor flceiling flround fltruncate fl->fx fx->fl fxrshift fxlshift fxnot fxxor fxior fxand fl->exact-integer ->fl fxvector-set! fxvector-ref fxvector-length pregexp? regexp? regexp-replace* regexp-replace regexp-match-peek-positions-immediate/end regexp-match-peek-positions-immediate regexp-match-peek-immediate regexp-match-peek-positions/end regexp-match-peek-positions regexp-match-peek regexp-match? regexp-match-positions/end regexp-match-positions regexp-match/end regexp-match pregexp regexp string-locale-downcase string-locale-upcase string-foldcase string-titlecase string-downcase string-upcase string-normalize-nfkd string-normalize-nfd string-normalize-nfkc string-normalize-nfc string->immutable-string string-fill! string-copy! string-copy list->string string->list string-append substring string-ci>=? string-ci<=? string-locale-ci>? string-ci>? string-locale-ci<? string-ci<? string>=? string<=? string-locale>? string>? string-locale<? string<? string-locale-ci=? string-ci=? string-locale=? string=? string-set! string-ref string-length string make-string string? real->floating-point-bytes floating-point-bytes->real integer->integer-bytes integer-bytes->integer string->number number->string min max negative? positive? zero? modulo quotient/remainder remainder quotient sub1 inexact->exact exact->inexact magnitude imag-part real-part make-polar make-rectangular expt integer-sqrt/remainder integer-sqrt sqrt tan cos sin log exp denominator numerator round truncate floor lcm gcd integer-length even? odd? inexact? exact? real->double-flonum real->single-flonum single-flonum? flonum? inexact-real? fixnum? exact-positive-integer? exact-nonnegative-integer? exact-integer? integer? rational? real? number? set-box! unbox member memv memq list-ref list-tail reverse length list* list list? null? set-mcdr! set-mcar! mcdr mcar mcons mpair? pair? symbol->string string->symbol symbol-interned? symbol-unreadable? symbol? seconds->date void? void unsafe-fx<= unsafe-fx> unsafe-fx< unsafe-fx= unsafe-flsqrt unsafe-flabs unsafe-fl/ unsafe-fl* unsafe-fl- unsafe-fl+ unsafe-fxabs unsafe-fxmodulo unsafe-fxremainder unsafe-fxquotient unsafe-fx* unsafe-fx- unsafe-fx+ unsafe-flimag-part unsafe-flreal-part unsafe-make-flrectangular unsafe-u16vector-set! unsafe-u16vector-ref unsafe-s16vector-set! unsafe-s16vector-ref unsafe-fxvector-set! unsafe-fxvector-ref unsafe-fxvector-length unsafe-flvector-set! unsafe-flvector-ref unsafe-flvector-length unsafe-f64vector-set! unsafe-f64vector-ref unsafe-fl->fx unsafe-fx->fl unsafe-fxrshift unsafe-fxlshift unsafe-fxnot unsafe-fxxor unsafe-fxior unsafe-fxand unsafe-bytes-set! unsafe-bytes-ref unsafe-bytes-length unsafe-string-set! unsafe-string-ref unsafe-string-length unsafe-set-mcdr! unsafe-set-mcar! unsafe-mcdr unsafe-mcar unsafe-list-tail unsafe-list-ref unsafe-cdr unsafe-car unsafe-flmax unsafe-flmin unsafe-fl>= unsafe-fl<= unsafe-fl> unsafe-fl< unsafe-fl= unsafe-fxmax unsafe-fxmin unsafe-fx>= make-fxvector fxvector? fxvector flvector-set! flvector-ref flvector-length make-flvector flvector? flvector regexp-max-lookbehind print-as-expression print-boolean-long-form print-reader-abbreviations print-syntax-width print-mpair-curly-braces print-pair-curly-braces print-unreadable print-hash-table print-vector-length print-box print-struct print-graph equal-secondary-hash-code equal-hash-code eqv-hash-code eq-hash-code hash-remove hash-remove! hash-ref hash-set hash-set! hash-copy hash-count hash-weak? hash-equal? hash-eqv? hash-eq? hash? hasheqv hasheq hash make-immutable-hasheqv make-immutable-hasheq make-immutable-hash make-weak-hasheqv make-weak-hasheq make-weak-hash make-hasheqv make-hasheq make-hash immutable? keyword->string string->keyword keyword<? keyword? make-bytes string-utf-8-length string->bytes/latin-1 string->bytes/locale string->bytes/utf-8 list->bytes subbytes vector->values vector->immutable-vector vector-copy! vector-fill! list->vector vector->list vector-set! vector-ref vector-length vector-immutable vector make-vector integer->char vector? date-time-zone-offset date-dst? date-year-day date-week-day date-year date-month date-day date-hour date-minute date-second date? date equal?/recur equal? eqv? eq?
  read-accept-lang
  read-accept-reader
  read-accept-quasiquote
  read-accept-infix-dot
  read-accept-dot
  read-decimal-as-inexact
  read-accept-bar-quote
  read-accept-box
  read-accept-compiled
  read-accept-graph
  read-curly-brace-as-paren
  read-square-bracket-as-paren
  read-case-sensitive
  open-output-string
  open-output-bytes
  open-input-string
  open-input-bytes
]
  [runtime-specific box-cas! alarm-evt always-evt choice-evt channel-put-evt channel-put-evt? channel? collect-garbage]
  [potentially-simple bytes-close-converter bytes-convert bytes-convert-end bytes-converter? bytes-open-converter weak-box? weak-box-value make-weak-box gensym string->unreadable-symbol string->uninterned-symbol ]
  [io char-ready? byte-ready? banner close-input-port close-output-port current-directory file-size delete-directory make-directory copy-file rename-file-or-directory delete-file link-exists? directory-exists? file-exists? current-seconds current-gc-milliseconds current-process-milliseconds current-inexact-milliseconds current-milliseconds open-input-file port-closed? terminal-port? file-stream-port? output-port? input-port? peek-bytes! peek-bytes read-bytes! read-bytes peek-string! peek-string read-string! read-string read-line read-bytes-line read-byte-or-special read-byte read-char-or-special read-char read-language read-syntax/recursive read-syntax read/recursive read port-commit-peeked write-byte write-char newline peek-byte-or-special peek-byte peek-char-or-special peek-char write-special-avail* write-special flush-output print display write printf 
  write-string
  write-bytes
]
  [control abort-current-continuation break-enabled break-thread call-in-nested-thread call-with-composable-continuation call-with-continuation-barrier call-with-continuation-prompt call-with-current-continuation call-with-escape-continuation call-with-immediate-continuation-mark call-with-input-file call-with-output-file call-with-semaphore call-with-semaphore/enable-break call-with-values call/cc call/ec ormap andmap for-each map apply procedure? time-apply hash-iterate-key hash-iterate-value hash-iterate-next hash-iterate-first hash-for-each hash-map ]
  [who-knows arity-at-least arity-at-least-value arity-at-least? checked-procedure-check-and-extract chaperone-box chaperone-continuation-mark-key chaperone-evt chaperone-hash chaperone-of? chaperone-procedure chaperone-prompt-tag chaperone-struct chaperone-struct-type chaperone-vector chaperone? compile compile-allow-set!-undefined compile-context-preservation-enabled compile-enforce-module-constants compile-syntax compiled-expression? compiled-module-expression?])

(define difference
  (lambda (s1 s2)
    (cond
      [(null? s1) '()]
      [(memq (car s1) s2) (difference (cdr s1) s2)]
      [else (cons (car s1) (difference (cdr s1) s2))])))

(define flat-full-prim-list (map car (apply append (map cdr (build-primitive-list)))))

(define extra-prims (difference all-primitives flat-full-prim-list))
(define missing-prims (difference flat-full-prim-list all-primitives))

(provide (all-defined-out))

#|

syntax:
  syntax-local-lift-provide
  syntax-local-lift-require
  syntax-local-lift-module-end-declaration
  syntax-local-lift-context
  syntax-local-lift-values-expression
  syntax-local-lift-expression
  rename-transformer-target
  rename-transformer?
  make-rename-transformer
  set!-transformer-procedure
  set!-transformer?
  make-set!-transformer
  syntax-local-transforming-module-provides?
  syntax-local-module-required-identifiers
  syntax-local-submodules
  syntax-local-module-defined-identifiers
  syntax-local-module-exports
  syntax-local-make-delta-introducer
  make-syntax-introducer
  syntax-local-introduce
  syntax-local-get-shadower
  identifier-remove-from-definition-context
  internal-definition-context?
  internal-definition-context-seal
  syntax-local-make-definition-context
  syntax-local-phase-level
  syntax-local-context
  syntax-local-name
  syntax-local-value/immediate
  syntax-local-value
  syntax-transforming-module-expression?
  syntax-transforming?
  variable-reference-constant?
  variable-reference->module-declaration-inspector
  variable-reference->module-base-phase
  variable-reference->phase
  variable-reference->namespace
  variable-reference->empty-namespace
  variable-reference->module-source
  variable-reference->resolved-module-path
  variable-reference->module-path-index
  variable-reference?
  free-label-identifier=?
  free-template-identifier=?
  free-transformer-identifier=?
  free-identifier=?
  syntax-shift-phase-level
  make-syntax-delta-introducer
  syntax-taint
  syntax-rearm
  syntax-disarm
  syntax-arm
  syntax-tainted?
  syntax-source-module
  syntax-track-origin
  syntax-property-symbol-keys
  syntax-property
  syntax-original?
  syntax->list
  syntax-source
  syntax-span
  syntax-position
  syntax-column
  syntax-line
  syntax-e
  datum->syntax
  syntax->datum
  syntax?

modules/namespace:
  module-path-index-join
  module-path-index-submodule
  module-path-index-split
  module-path-index-resolve
  module-path-index?
  module-compiled-submodules
  module-compiled-language-info
  module-compiled-exports
  module-compiled-imports
  module-compiled-name
  module-path?
  module-predefined?
  module-declared?
  module->exports
  module->imports
  module->language-info
  module->namespace
  module-provide-protected?
  resolved-module-path-name
  make-resolved-module-path
  resolved-module-path?
  namespace-module-registry
  namespace-mapped-symbols
  namespace-undefine-variable!
  namespace-set-variable-value!
  namespace-variable-value
  namespace-base-phase
  namespace-module-identifier
  namespace-symbol->identifier
  namespace-require/expansion-time
  namespace-require/constant
  namespace-require/copy
  namespace-unprotect-module
  namespace-attach-module-declaration
  namespace-attach-module
  namespace-require
  namespace?

i/o:
  current-drive
  file-or-directory-identity
  file-or-directory-permissions
  file-or-directory-modify-seconds
  make-file-or-directory-link
  filesystem-root-list
  directory-list
  expand-user-path
  simplify-path
  resolve-path
  path->complete-path
  relative-path?
  split-path
  path->directory-path
  string->path-element
  string->path
  path-element->string
  path-element->bytes
  path->bytes
  path->string
  system-path-convention-type
  path-convention-type
  path-for-some-system?
  path?

threads:
  never-evt
  system-idle-evt
  thread-rewind-receive
  thread-receive-evt
  thread-try-receive
  thread-receive
  thread-send
  make-channel
  semaphore-peek-evt?
  semaphore-peek-evt
  semaphore-wait/enable-break
  semaphore-wait
  semaphore-try-wait?
  semaphore-post
  semaphore?
  make-semaphore
  current-thread-initial-stack-size
  evt?
  thread-cell-values?
  current-preserved-thread-cell-values
  thread-cell-set!
  thread-cell-ref
  make-thread-cell
  thread-cell?
  thread-dead-evt
  thread-suspend-evt
  thread-resume-evt
  thread-resume
  thread-suspend
  kill-thread
  current-thread
  thread-wait
  thread-dead?
  thread-running?
  thread?
  thread/suspend-to-kill
  thread
  
gc:
  custodian-memory-accounting-available?
  custodian-limit-memory
  custodian-require-memory
  current-memory-use

exceptions:
  raise
  uncaught-exception-handler
  struct:exn:break:hang-up
  exn:break:hang-up
  exn:break:hang-up?
  struct:exn:break:terminate
  exn:break:terminate
  exn:break:terminate?
  struct:exn:break
  exn:break
  exn:break?
  exn:break-continuation
  struct:exn:fail:user
  exn:fail:user
  exn:fail:user?
  struct:exn:fail:unsupported
  exn:fail:unsupported
  exn:fail:unsupported?
  struct:exn:fail:out-of-memory
  exn:fail:out-of-memory
  exn:fail:out-of-memory?
  struct:exn:fail:network
  exn:fail:network
  exn:fail:network?
  struct:exn:fail:filesystem:version
  exn:fail:filesystem:version
  exn:fail:filesystem:version?
  struct:exn:fail:filesystem:exists
  exn:fail:filesystem:exists
  exn:fail:filesystem:exists?
  struct:exn:fail:filesystem
  exn:fail:filesystem
  exn:fail:filesystem?
  struct:exn:fail:read:non-char
  exn:fail:read:non-char
  exn:fail:read:non-char?
  struct:exn:fail:read:eof
  exn:fail:read:eof
  exn:fail:read:eof?
  struct:exn:fail:read
  exn:fail:read
  exn:fail:read?
  exn:fail:read-srclocs
  struct:exn:fail:syntax:unbound
  exn:fail:syntax:unbound
  exn:fail:syntax:unbound?
  struct:exn:fail:syntax
  exn:fail:syntax
  exn:fail:syntax?
  exn:fail:syntax-exprs
  struct:exn:fail:contract:variable
  exn:fail:contract:variable
  exn:fail:contract:variable?
  exn:fail:contract:variable-id
  struct:exn:fail:contract:continuation
  exn:fail:contract:continuation
  exn:fail:contract:continuation?
  struct:exn:fail:contract:non-fixnum-result
  exn:fail:contract:non-fixnum-result
  exn:fail:contract:non-fixnum-result?
  struct:exn:fail:contract:divide-by-zero
  exn:fail:contract:divide-by-zero
  exn:fail:contract:divide-by-zero?
  struct:exn:fail:contract:arity
  exn:fail:contract:arity
  exn:fail:contract:arity?
  struct:exn:fail:contract
  exn:fail:contract
  exn:fail:contract?
  struct:exn:fail
  exn:fail
  exn:fail?
  struct:exn
  exn
  exn?
  exn-message
  exn-continuation-marks
  error-print-source-location
  error-print-context-length
  error-print-width
  error-escape-handler
  error-value->string-handler
  error-display-handler
  raise-arity-error
  raise-range-error
  raise-mismatch-error
  raise-arguments-error
  raise-result-error
  raise-argument-error
  raise-type-error
  raise-syntax-error
  raise-user-error
  error
 
unknown:
  current-load-extension
  load-extension
  use-collection-link-paths
  use-user-specific-search-paths
  current-compiled-file-roots
  use-compiled-file-paths
  current-library-collection-paths
  find-system-path
  datum-intern-literal
  readtable-mapping
  readtable?
  make-readtable
  read-on-demand-source
  current-reader-guard
  current-readtable
  sync/timeout/enable-break
  sync/enable-break
  sync/timeout
  sync
  will-execute
  will-try-execute
  will-register
  will-executor?
  make-will-executor

'(  parameterization?
  parameter-procedure=?
  make-derived-parameter
  make-parameter
  parameter?
  current-thread-group
  make-thread-group
  thread-group?
  current-security-guard
  make-security-guard
  security-guard?
  current-namespace
  custodian-box?
  custodian-box-value
  make-custodian-box
  custodian-managed-list
  custodian-shutdown-all
  custodian?
  make-custodian
  current-custodian
  sleep
  make-empty-namespace
  vector-set-performance-stats!
  dump-memory-stats
  impersonator-prop:application-mark
  impersonator-property?
  make-impersonator-property
  impersonate-struct
  exn:srclocs-accessor
  exn:srclocs?
  prop:exn:srclocs
  special-comment?
  special-comment-value
  make-special-comment
  current-code-inspector
  current-inspector
  inspector?
  make-sibling-inspector
  make-inspector
  impersonator-property-accessor-procedure?
  struct-type-property-accessor-procedure?
  struct-constructor-procedure?
  struct-predicate-procedure?
  struct-accessor-procedure?
  struct-mutator-procedure?
  prefab-key?
  prefab-key->struct-type
  make-prefab-struct
  prefab-struct-key
  struct->vector
  struct-type-make-constructor
  struct-type-make-predicate
  struct-type-info
  struct-info
  procedure-extract-target
  procedure-struct-type?
  struct-type-property?
  struct-type?
  struct?
  handle-evt?
  poll-guard-evt
  nack-guard-evt
  handle-evt
  wrap-evt
  make-struct-field-mutator
  make-struct-field-accessor
  make-struct-type-property
  make-struct-type
  prop:method-arity-error
  liberal-define-context?
  prop:liberal-define-context
  prop:checked-procedure
  prop:set!-transformer
  prop:rename-transformer
  prop:output-port
  prop:input-port
  prop:impersonator-of
  prop:equal+hash
  prop:incomplete-arity
  prop:procedure
  prop:evt
  custom-print-quotable-accessor
  custom-print-quotable?
  prop:custom-print-quotable
  custom-write-accessor
  custom-write?
  prop:custom-write
  srcloc-span
  srcloc-position
  srcloc-column
  srcloc-line
  srcloc-source
  srcloc?
  srcloc
  struct:srcloc
  date*-time-zone-name
  date*-nanosecond
  date*?
  date*
  struct:date*
  struct:date
  struct:arity-at-least
  prop:arity-string
  current-logger
  log-receiver?
  logger-name
  logger?
  log-message
  make-log-receiver
  make-logger
  log-max-level
  log-level?
  exit
  executable-yield-handler
  exit-handler
  eval-jit-enabled
  current-compile
  current-eval
  namespace-syntax-introduce
  expand-syntax-to-top-form
  expand-to-top-form
  expand-syntax-once
  expand-once
  local-transformer-expand/capture-lifts
  local-transformer-expand
  local-expand/capture-lifts
  syntax-local-bind-syntaxes
  syntax-local-expand-expression
  local-expand
  expand-syntax
  expand
  eval-syntax
  eval
  impersonator-of?
  impersonator?
  not
  make-known-char-range-list
  impersonate-vector
  current-command-line-arguments
  system-library-subpath
  system-type
  putenv
  getenv
  version
  shared-bytes
  make-shared-bytes
  fprintf
  eprintf
  format
  system-language+country
  locale-string-encoding
  current-locale
  pipe-content-length
  eof-object?
  port-count-lines!
  port-file-identity
  port-file-unlock
  port-try-file-lock?
  file-stream-buffer-mode
  file-position*
  file-position
  port-print-handler
  port-write-handler
  port-display-handler
  port-read-handler
  write-special-evt
  write-bytes-avail-evt
  port-closed-evt
  progress-evt?
  port-progress-evt
  port-writes-special?
  port-writes-atomic?
  write-bytes-avail/enable-break
  write-bytes-avail*
  write-bytes-avail
  port-provides-progress-evts?
  peek-bytes-avail!/enable-break
  peek-bytes-avail!*
  peek-bytes-avail!
  read-bytes-avail!/enable-break
  read-bytes-avail!*
  read-bytes-avail!
  set-port-next-location!
  port-next-location
  make-pipe
  load
  with-input-from-file
  with-output-to-file
  make-output-port
  make-input-port
  open-input-output-file
  get-output-string
  get-output-bytes
  open-output-file
  port-count-lines-enabled
  load-on-demand-enabled
  global-port-print-handler
  current-write-relative-directory
  current-load-relative-directory
  current-load/use-compiled
  current-load
  current-error-port
  current-output-port
  current-input-port
  eof
  shell-execute
  current-subprocess-custodian-mode
  subprocess-group-enabled
  subprocess-wait
  subprocess?
  subprocess-pid
  subprocess-kill
  subprocess-status
  subprocess
  dynamic-require-for-syntax
  dynamic-require
  current-module-declare-source
  current-module-declare-name
  current-module-name-resolver
  identifier-prune-to-source-module
  identifier-prune-lexical-context
  identifier-label-binding
  identifier-template-binding
  identifier-transformer-binding
  identifier-binding
  current-evt-pseudo-random-generator
  current-pseudo-random-generator
  pseudo-random-generator?
  pseudo-random-generator-vector?
  pseudo-random-generator->vector
  vector->pseudo-random-generator!
  vector->pseudo-random-generator
  make-pseudo-random-generator
  random-seed
  random
  system-big-endian?
  hash-placeholder?
  make-hasheqv-placeholder
  make-hasheq-placeholder
  make-hash-placeholder
  placeholder?
  placeholder-set!
  placeholder-get
  make-placeholder
  make-reader-graph
  ephemeron?
  ephemeron-value
  make-ephemeron
  impersonate-hash
  impersonate-box
  current-get-interaction-input-port
  current-read-interaction
  current-prompt-read
  current-print
  primitive-result-arity
  primitive-closure?
  primitive?
  impersonate-procedure
  procedure-closure-contents-eq?
  procedure->method
  procedure-rename
  procedure-reduce-arity
  procedure-arity-includes?
  procedure-arity?
  procedure-arity
  object-name
  dynamic-wind
  continuation-mark-set->context
  continuation-mark-set?
  continuation-mark-set-first
  continuation-mark-set->list*
  continuation-mark-set->list
  continuation-marks
  current-continuation-marks
  impersonate-continuation-mark-key
  continuation-mark-key?
  make-continuation-mark-key
  impersonate-prompt-tag
  continuation-prompt-tag?
  default-continuation-prompt-tag
  make-continuation-prompt-tag
  continuation-prompt-available?
  continuation?
  values
  unsafe-struct*-set!
  unsafe-struct-set!
  unsafe-struct*-ref
  unsafe-struct-ref
  unsafe-vector*-set!
  unsafe-vector-set!
  unsafe-vector*-ref
  unsafe-vector-ref
  unsafe-vector*-length
  unsafe-vector-length
  unsafe-box*-cas!
  unsafe-set-box*!
  unsafe-set-box!
  unsafe-unbox*
  unsafe-unbox
  make-shared-fxvector
  shared-fxvector
  make-shared-flvector
  shared-flvector
  mark-future-trace-end!
  reset-future-logs-for-tracing!
  futures-enabled?
  would-be-future
  fsemaphore-try-wait?
  fsemaphore-post
  fsemaphore-wait
  fsemaphore-count
  make-fsemaphore
  fsemaphore?
  current-future
  touch
  processor-count
  future
  future?)
|#
